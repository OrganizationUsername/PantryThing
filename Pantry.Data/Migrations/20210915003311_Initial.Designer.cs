// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pantry.Data;

namespace Pantry.Data.Migrations
{
    [DbContext(typeof(DataBase))]
    [Migration("20210915003311_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("Pantry.Core.Models.BetterRecipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MainOutputFoodId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MainOutputFoodId");

                    b.ToTable("BetterRecipes");
                });

            modelBuilder.Entity("Pantry.Core.Models.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RecipeHierarchyId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RecipeStepId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EquipmentId");

                    b.HasIndex("RecipeHierarchyId");

                    b.HasIndex("RecipeStepId");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("Pantry.Core.Models.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("FoodId");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("Pantry.Core.Models.FoodInstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL");

                    b.Property<int?>("BetterRecipeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BetterRecipeId1")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("FoodTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BetterRecipeId");

                    b.HasIndex("BetterRecipeId1");

                    b.HasIndex("FoodTypeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("FoodInstances");
                });

            modelBuilder.Entity("Pantry.Core.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("InputFoodInstanceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OutputFoodInstanceId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RecipeHierarchyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecipeStepsId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TimeCost")
                        .HasColumnType("REAL");

                    b.HasKey("RecipeId");

                    b.HasIndex("OutputFoodInstanceId");

                    b.HasIndex("RecipeHierarchyId");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("Pantry.Core.Models.RecipeHierarchy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Instruction")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RecipeHierarchyId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TimeCost")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("RecipeHierarchyId");

                    b.ToTable("RecipeHierarchy");
                });

            modelBuilder.Entity("Pantry.Core.Models.RecipeStep", b =>
                {
                    b.Property<int>("RecipeStepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BetterRecipeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Instruction")
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TimeCost")
                        .HasColumnType("REAL");

                    b.HasKey("RecipeStepId");

                    b.HasIndex("BetterRecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeStep");
                });

            modelBuilder.Entity("Pantry.Core.Models.BetterRecipe", b =>
                {
                    b.HasOne("Pantry.Core.Models.Food", "MainOutput")
                        .WithMany("BetterRecipes")
                        .HasForeignKey("MainOutputFoodId");

                    b.Navigation("MainOutput");
                });

            modelBuilder.Entity("Pantry.Core.Models.Equipment", b =>
                {
                    b.HasOne("Pantry.Core.Models.RecipeHierarchy", null)
                        .WithMany("Equipments")
                        .HasForeignKey("RecipeHierarchyId");

                    b.HasOne("Pantry.Core.Models.RecipeStep", null)
                        .WithMany("Equipments")
                        .HasForeignKey("RecipeStepId");
                });

            modelBuilder.Entity("Pantry.Core.Models.FoodInstance", b =>
                {
                    b.HasOne("Pantry.Core.Models.BetterRecipe", null)
                        .WithMany("Inputs")
                        .HasForeignKey("BetterRecipeId");

                    b.HasOne("Pantry.Core.Models.BetterRecipe", null)
                        .WithMany("Outputs")
                        .HasForeignKey("BetterRecipeId1");

                    b.HasOne("Pantry.Core.Models.Food", "FoodType")
                        .WithMany()
                        .HasForeignKey("FoodTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pantry.Core.Models.Recipe", null)
                        .WithMany("InputFoodInstance")
                        .HasForeignKey("RecipeId");

                    b.Navigation("FoodType");
                });

            modelBuilder.Entity("Pantry.Core.Models.Recipe", b =>
                {
                    b.HasOne("Pantry.Core.Models.FoodInstance", "OutputFoodInstance")
                        .WithMany()
                        .HasForeignKey("OutputFoodInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pantry.Core.Models.RecipeHierarchy", "RecipeHierarchy")
                        .WithMany()
                        .HasForeignKey("RecipeHierarchyId");

                    b.Navigation("OutputFoodInstance");

                    b.Navigation("RecipeHierarchy");
                });

            modelBuilder.Entity("Pantry.Core.Models.RecipeHierarchy", b =>
                {
                    b.HasOne("Pantry.Core.Models.RecipeHierarchy", null)
                        .WithMany("Dependents")
                        .HasForeignKey("RecipeHierarchyId");
                });

            modelBuilder.Entity("Pantry.Core.Models.RecipeStep", b =>
                {
                    b.HasOne("Pantry.Core.Models.BetterRecipe", null)
                        .WithMany("RecipeSteps")
                        .HasForeignKey("BetterRecipeId");

                    b.HasOne("Pantry.Core.Models.Recipe", "Recipe")
                        .WithMany("RecipeSteps")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Pantry.Core.Models.BetterRecipe", b =>
                {
                    b.Navigation("Inputs");

                    b.Navigation("Outputs");

                    b.Navigation("RecipeSteps");
                });

            modelBuilder.Entity("Pantry.Core.Models.Food", b =>
                {
                    b.Navigation("BetterRecipes");
                });

            modelBuilder.Entity("Pantry.Core.Models.Recipe", b =>
                {
                    b.Navigation("InputFoodInstance");

                    b.Navigation("RecipeSteps");
                });

            modelBuilder.Entity("Pantry.Core.Models.RecipeHierarchy", b =>
                {
                    b.Navigation("Dependents");

                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("Pantry.Core.Models.RecipeStep", b =>
                {
                    b.Navigation("Equipments");
                });
#pragma warning restore 612, 618
        }
    }
}
